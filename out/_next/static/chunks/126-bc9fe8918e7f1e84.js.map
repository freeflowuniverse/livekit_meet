{"version":3,"file":"static/chunks/126-bc9fe8918e7f1e84.js","mappings":"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","sources":["webpack://_N_E/./lib/Debug.tsx","webpack://_N_E/./lib/SettingsMenu.tsx","webpack://_N_E/./lib/client-utils.ts","webpack://_N_E/./lib/types.ts","webpack://_N_E/./styles/Debug.module.css","webpack://_N_E/./styles/SettingsMenu.module.css"],"sourcesContent":["import * as React from 'react';\nimport { useRoomContext } from '@livekit/components-react';\nimport { setLogLevel, LogLevel, RemoteTrackPublication, setLogExtension } from 'livekit-client';\n// @ts-ignore\nimport { tinykeys } from 'tinykeys';\nimport { datadogLogs } from '@datadog/browser-logs';\n\nimport styles from '../styles/Debug.module.css';\n\nexport const useDebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\n  const room = useRoomContext();\n\n  React.useEffect(() => {\n    setLogLevel(logLevel ?? 'debug');\n\n    if (process.env.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN && process.env.NEXT_PUBLIC_DATADOG_SITE) {\n      console.log('setting up datadog logs');\n      datadogLogs.init({\n        clientToken: process.env.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN,\n        site: process.env.NEXT_PUBLIC_DATADOG_SITE,\n        forwardErrorsToLogs: true,\n        sessionSampleRate: 100,\n      });\n\n      setLogExtension((level, msg, context) => {\n        switch (level) {\n          case LogLevel.debug:\n            datadogLogs.logger.debug(msg, context);\n            break;\n          case LogLevel.info:\n            datadogLogs.logger.info(msg, context);\n            break;\n          case LogLevel.warn:\n            datadogLogs.logger.warn(msg, context);\n            break;\n          case LogLevel.error:\n            datadogLogs.logger.error(msg, context);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n\n    // @ts-expect-error\n    window.__lk_room = room;\n\n    return () => {\n      // @ts-expect-error\n      window.__lk_room = undefined;\n    };\n  }, [room, logLevel]);\n};\n\nexport const DebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\n  const room = useRoomContext();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [, setRender] = React.useState({});\n  const [roomSid, setRoomSid] = React.useState('');\n\n  React.useEffect(() => {\n    room.getSid().then(setRoomSid);\n  }, [room]);\n\n  useDebugMode({ logLevel });\n\n  React.useEffect(() => {\n    if (window) {\n      const unsubscribe = tinykeys(window, {\n        'Shift+D': () => {\n          console.log('setting open');\n          setIsOpen((open) => !open);\n        },\n      });\n\n      // timer to re-render\n      const interval = setInterval(() => {\n        setRender({});\n      }, 1000);\n\n      return () => {\n        unsubscribe();\n        clearInterval(interval);\n      };\n    }\n  }, [isOpen]);\n\n  if (typeof window === 'undefined' || !isOpen) {\n    return null;\n  }\n\n  const handleSimulate = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    if (value == '') {\n      return;\n    }\n    event.target.value = '';\n    let isReconnect = false;\n    switch (value) {\n      case 'signal-reconnect':\n        isReconnect = true;\n\n      // fall through\n      default:\n        // @ts-expect-error\n        room.simulateScenario(value);\n    }\n  };\n\n  const lp = room.localParticipant;\n\n  if (!isOpen) {\n    return <></>;\n  } else {\n    return (\n      <div className={styles.overlay}>\n        <section id=\"room-info\">\n          <h3>\n            Room Info {room.name}: {roomSid}\n          </h3>\n        </section>\n        <details open>\n          <summary>\n            <b>Local Participant: {lp.identity}</b>\n          </summary>\n          <details open className={styles.detailsSection}>\n            <summary>\n              <b>Published tracks</b>\n            </summary>\n            <div>\n              {Array.from(lp.trackPublications.values()).map((t) => (\n                <>\n                  <div>\n                    <i>\n                      {t.source.toString()}\n                      &nbsp;<span>{t.trackSid}</span>\n                    </i>\n                  </div>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Kind</td>\n                        <td>\n                          {t.kind}&nbsp;\n                          {t.kind === 'video' && (\n                            <span>\n                              {t.track?.dimensions?.width}x{t.track?.dimensions?.height}\n                            </span>\n                          )}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Bitrate</td>\n                        <td>{Math.ceil(t.track!.currentBitrate / 1000)} kbps</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </>\n              ))}\n            </div>\n          </details>\n          <details open className={styles.detailsSection}>\n            <summary>\n              <b>Permissions</b>\n            </summary>\n            <div>\n              <table>\n                <tbody>\n                  {lp.permissions &&\n                    Object.entries(lp.permissions).map(([key, val]) => (\n                      <>\n                        <tr>\n                          <td>{key}</td>\n                          {key !== 'canPublishSources' ? (\n                            <td>{val.toString()}</td>\n                          ) : (\n                            <td> {val.join(', ')} </td>\n                          )}\n                        </tr>\n                      </>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </details>\n        </details>\n\n        <details>\n          <summary>\n            <b>Remote Participants</b>\n          </summary>\n          {Array.from(room.remoteParticipants.values()).map((p) => (\n            <details key={p.sid} className={styles.detailsSection}>\n              <summary>\n                <b>\n                  {p.identity}\n                  <span></span>\n                </b>\n              </summary>\n              <div>\n                {Array.from(p.trackPublications.values()).map((t) => (\n                  <>\n                    <div>\n                      <i>\n                        {t.source.toString()}\n                        &nbsp;<span>{t.trackSid}</span>\n                      </i>\n                    </div>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Kind</td>\n                          <td>\n                            {t.kind}&nbsp;\n                            {t.kind === 'video' && (\n                              <span>\n                                {t.dimensions?.width}x{t.dimensions?.height}\n                              </span>\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Status</td>\n                          <td>{trackStatus(t)}</td>\n                        </tr>\n                        {t.track && (\n                          <tr>\n                            <td>Bitrate</td>\n                            <td>{Math.ceil(t.track.currentBitrate / 1000)} kbps</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </>\n                ))}\n              </div>\n            </details>\n          ))}\n        </details>\n      </div>\n    );\n  }\n};\n\nfunction trackStatus(t: RemoteTrackPublication): string {\n  if (t.isSubscribed) {\n    return t.isEnabled ? 'enabled' : 'disabled';\n  } else {\n    return 'unsubscribed';\n  }\n}\n","'use client';\nimport * as React from 'react';\nimport { Track } from 'livekit-client';\nimport {\n  useMaybeLayoutContext,\n  MediaDeviceMenu,\n  TrackToggle,\n  useRoomContext,\n  useIsRecording,\n} from '@livekit/components-react';\nimport { useKrispNoiseFilter } from '@livekit/components-react/krisp';\nimport styles from '../styles/SettingsMenu.module.css';\n\n/**\n * @alpha\n */\nexport interface SettingsMenuProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * @alpha\n */\nexport function SettingsMenu(props: SettingsMenuProps) {\n  const layoutContext = useMaybeLayoutContext();\n  const room = useRoomContext();\n  const recordingEndpoint = process.env.NEXT_PUBLIC_LK_RECORD_ENDPOINT;\n\n  const settings = React.useMemo(() => {\n    return {\n      media: { camera: true, microphone: true, label: 'Media Devices', speaker: true },\n      effects: { label: 'Effects' },\n      recording: recordingEndpoint ? { label: 'Recording' } : undefined,\n    };\n  }, []);\n\n  const tabs = React.useMemo(\n    () => Object.keys(settings).filter((t) => t !== undefined) as Array<keyof typeof settings>,\n    [settings],\n  );\n  const [activeTab, setActiveTab] = React.useState(tabs[0]);\n\n  const { isNoiseFilterEnabled, setNoiseFilterEnabled, isNoiseFilterPending } =\n    useKrispNoiseFilter();\n\n  React.useEffect(() => {\n    // enable Krisp by default\n    setNoiseFilterEnabled(true);\n  }, []);\n\n  const isRecording = useIsRecording();\n  const [initialRecStatus, setInitialRecStatus] = React.useState(isRecording);\n  const [processingRecRequest, setProcessingRecRequest] = React.useState(false);\n\n  React.useEffect(() => {\n    if (initialRecStatus !== isRecording) {\n      setProcessingRecRequest(false);\n    }\n  }, [isRecording, initialRecStatus]);\n\n  const toggleRoomRecording = async () => {\n    if (!recordingEndpoint) {\n      throw TypeError('No recording endpoint specified');\n    }\n    if (room.isE2EEEnabled) {\n      throw Error('Recording of encrypted meetings is currently not supported');\n    }\n    setProcessingRecRequest(true);\n    setInitialRecStatus(isRecording);\n    let response: Response;\n    if (isRecording) {\n      response = await fetch(recordingEndpoint + `/stop?roomName=${room.name}`);\n    } else {\n      response = await fetch(recordingEndpoint + `/start?roomName=${room.name}`);\n    }\n    if (response.ok) {\n    } else {\n      console.error(\n        'Error handling recording request, check server logs:',\n        response.status,\n        response.statusText,\n      );\n      setProcessingRecRequest(false);\n    }\n  };\n\n  return (\n    <div className=\"settings-menu\" style={{ width: '100%' }} {...props}>\n      <div className={styles.tabs}>\n        {tabs.map(\n          (tab) =>\n            settings[tab] && (\n              <button\n                className={`${styles.tab} lk-button`}\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                aria-pressed={tab === activeTab}\n              >\n                {\n                  // @ts-ignore\n                  settings[tab].label\n                }\n              </button>\n            ),\n        )}\n      </div>\n      <div className=\"tab-content\">\n        {activeTab === 'media' && (\n          <>\n            {settings.media && settings.media.camera && (\n              <>\n                <h3>Camera</h3>\n                <section className=\"lk-button-group\">\n                  <TrackToggle source={Track.Source.Camera}>Camera</TrackToggle>\n                  <div className=\"lk-button-group-menu\">\n                    <MediaDeviceMenu kind=\"videoinput\" />\n                  </div>\n                </section>\n              </>\n            )}\n            {settings.media && settings.media.microphone && (\n              <>\n                <h3>Microphone</h3>\n                <section className=\"lk-button-group\">\n                  <TrackToggle source={Track.Source.Microphone}>Microphone</TrackToggle>\n                  <div className=\"lk-button-group-menu\">\n                    <MediaDeviceMenu kind=\"audioinput\" />\n                  </div>\n                </section>\n              </>\n            )}\n            {settings.media && settings.media.speaker && (\n              <>\n                <h3>Speaker & Headphones</h3>\n                <section className=\"lk-button-group\">\n                  <span className=\"lk-button\">Audio Output</span>\n                  <div className=\"lk-button-group-menu\">\n                    <MediaDeviceMenu kind=\"audiooutput\"></MediaDeviceMenu>\n                  </div>\n                </section>\n              </>\n            )}\n          </>\n        )}\n        {activeTab === 'effects' && (\n          <>\n            <h3>Audio</h3>\n            <section>\n              <label htmlFor=\"noise-filter\"> Enhanced Noise Cancellation</label>\n              <input\n                type=\"checkbox\"\n                id=\"noise-filter\"\n                onChange={(ev) => setNoiseFilterEnabled(ev.target.checked)}\n                checked={isNoiseFilterEnabled}\n                disabled={isNoiseFilterPending}\n              ></input>\n            </section>\n          </>\n        )}\n        {activeTab === 'recording' && (\n          <>\n            <h3>Record Meeting</h3>\n            <section>\n              <p>\n                {isRecording\n                  ? 'Meeting is currently being recorded'\n                  : 'No active recordings for this meeting'}\n              </p>\n              <button disabled={processingRecRequest} onClick={() => toggleRoomRecording()}>\n                {isRecording ? 'Stop' : 'Start'} Recording\n              </button>\n            </section>\n          </>\n        )}\n      </div>\n      <button\n        className={`lk-button ${styles.settingsCloseButton}`}\n        onClick={() => layoutContext?.widget.dispatch?.({ msg: 'toggle_settings' })}\n      >\n        Close\n      </button>\n    </div>\n  );\n}\n","export function encodePassphrase(passphrase: string) {\n  return encodeURIComponent(passphrase);\n}\n\nexport function decodePassphrase(base64String: string) {\n  return decodeURIComponent(base64String);\n}\n\nexport function generateRoomId(): string {\n  return `${randomString(4)}-${randomString(4)}`;\n}\n\nexport function randomString(length: number): string {\n  let result = '';\n  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import { LocalAudioTrack, LocalVideoTrack, videoCodecs } from 'livekit-client';\nimport { VideoCodec } from 'livekit-client';\n\nexport interface SessionProps {\n  roomName: string;\n  identity: string;\n  audioTrack?: LocalAudioTrack;\n  videoTrack?: LocalVideoTrack;\n  region?: string;\n  turnServer?: RTCIceServer;\n  forceRelay?: boolean;\n}\n\nexport interface TokenResult {\n  identity: string;\n  accessToken: string;\n}\n\nexport function isVideoCodec(codec: string): codec is VideoCodec {\n  return videoCodecs.includes(codec as VideoCodec);\n}\n\nexport type ConnectionDetails = {\n  serverUrl: string;\n  roomName: string;\n  participantName: string;\n  participantToken: string;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Debug_overlay__SZwFO\",\"detailsSection\":\"Debug_detailsSection__vJYFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsCloseButton\":\"SettingsMenu_settingsCloseButton__mdSd2\",\"tabs\":\"SettingsMenu_tabs__uq0cC\",\"tab\":\"SettingsMenu_tab__Pfa2A\"};"],"names":["DebugMode","logLevel","room","useRoomContext","isOpen","setIsOpen","React","setRender","roomSid","setRoomSid","getSid","then","setLogLevel","process","env","NEXT_PUBLIC_DATADOG_CLIENT_TOKEN","NEXT_PUBLIC_DATADOG_SITE","console","log","datadogLogs","init","clientToken","site","forwardErrorsToLogs","sessionSampleRate","setLogExtension","level","msg","context","LogLevel","debug","logger","info","warn","error","window","__lk_room","undefined","useDebugMode","unsubscribe","tinykeys","open","interval","setInterval","clearInterval","lp","localParticipant","div","className","styles","section","id","h3","name","details","summary","b","identity","Array","from","trackPublications","values","map","t","i","source","toString","span","trackSid","table","tbody","tr","td","kind","track","dimensions","width","height","Math","ceil","currentBitrate","permissions","Object","entries","key","val","join","remoteParticipants","p","trackStatus","sid","isSubscribed","isEnabled","SettingsMenu","props","layoutContext","useMaybeLayoutContext","recordingEndpoint","NEXT_PUBLIC_LK_RECORD_ENDPOINT","settings","media","camera","microphone","label","speaker","effects","recording","tabs","keys","filter","activeTab","setActiveTab","isNoiseFilterEnabled","setNoiseFilterEnabled","isNoiseFilterPending","useKrispNoiseFilter","isRecording","useIsRecording","initialRecStatus","setInitialRecStatus","processingRecRequest","setProcessingRecRequest","style","tab","button","onClick","aria-pressed","TrackToggle","Track","Source","Camera","MediaDeviceMenu","Microphone","htmlFor","input","type","onChange","ev","target","checked","disabled","async","TypeError","isE2EEEnabled","Error","response","fetch","ok","status","statusText","toggleRoomRecording","widget","dispatch","encodePassphrase","passphrase","encodeURIComponent","decodePassphrase","base64String","decodeURIComponent","generateRoomId","randomString","length","result","characters","charAt","floor","random","isVideoCodec","codec","videoCodecs","includes","module","exports"],"sourceRoot":""}