{"version":3,"file":"static/chunks/app/custom/page-9334e60c1180b965.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./app/custom/VideoConferenceClientImpl.tsx","webpack://_N_E/./app/custom/page.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/timurgordon/code/github/livekit-examples/meet/app/custom/page.tsx\");\n","'use client';\n\nimport { formatChatMessageLinks, LiveKitRoom, VideoConference } from '@livekit/components-react';\nimport {\n  ExternalE2EEKeyProvider,\n  LogLevel,\n  Room,\n  RoomConnectOptions,\n  RoomOptions,\n  VideoPresets,\n  type VideoCodec,\n} from 'livekit-client';\nimport { DebugMode } from '@/lib/Debug';\nimport { useMemo } from 'react';\nimport { decodePassphrase } from '@/lib/client-utils';\nimport { SettingsMenu } from '@/lib/SettingsMenu';\n\nexport function VideoConferenceClientImpl(props: {\n  liveKitUrl: string;\n  token: string;\n  codec: VideoCodec | undefined;\n}) {\n  const worker =\n    typeof window !== 'undefined' &&\n    new Worker(new URL('livekit-client/e2ee-worker', import.meta.url));\n  const keyProvider = new ExternalE2EEKeyProvider();\n\n  const e2eePassphrase =\n    typeof window !== 'undefined' ? decodePassphrase(window.location.hash.substring(1)) : undefined;\n  const e2eeEnabled = !!(e2eePassphrase && worker);\n  const roomOptions = useMemo((): RoomOptions => {\n    return {\n      publishDefaults: {\n        videoSimulcastLayers: [VideoPresets.h540, VideoPresets.h216],\n        red: !e2eeEnabled,\n        videoCodec: props.codec,\n      },\n      adaptiveStream: { pixelDensity: 'screen' },\n      dynacast: true,\n      e2ee: e2eeEnabled\n        ? {\n            keyProvider,\n            worker,\n          }\n        : undefined,\n    };\n  }, []);\n\n  const room = useMemo(() => new Room(roomOptions), []);\n  if (e2eeEnabled) {\n    keyProvider.setKey(e2eePassphrase);\n    room.setE2EEEnabled(true);\n  }\n  const connectOptions = useMemo((): RoomConnectOptions => {\n    return {\n      autoSubscribe: true,\n    };\n  }, []);\n\n  return (\n    <LiveKitRoom\n      room={room}\n      token={props.token}\n      connectOptions={connectOptions}\n      serverUrl={props.liveKitUrl}\n      audio={true}\n      video={true}\n    >\n      <VideoConference\n        chatMessageFormatter={formatChatMessageLinks}\n        SettingsComponent={\n          process.env.NEXT_PUBLIC_SHOW_SETTINGS_MENU === 'true' ? SettingsMenu : undefined\n        }\n      />\n      <DebugMode logLevel={LogLevel.debug} />\n    </LiveKitRoom>\n  );\n}\n","\"use client\"; // Mark this as a client component\nexport const dynamic = 'force-dynamic'; // Ensure this page is dynamically rendered\n\nimport * as React from 'react';\nimport { Suspense } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { videoCodecs } from 'livekit-client';\nimport { VideoConferenceClientImpl } from './VideoConferenceClientImpl';\nimport { isVideoCodec } from '@/lib/types';\n\nfunction CustomRoomContent() {\n  const searchParams = useSearchParams();\n  const liveKitUrl = searchParams.get('liveKitUrl');\n  const token = searchParams.get('token');\n  const codecParam = searchParams.get('codec');\n\n  if (typeof liveKitUrl !== 'string') {\n    return <h2>Missing LiveKit URL</h2>;\n  }\n  if (typeof token !== 'string') {\n    return <h2>Missing LiveKit token</h2>;\n  }\n\n  const codec = codecParam && isVideoCodec(codecParam) ? codecParam : undefined;\n\n  if (codecParam !== null && !isVideoCodec(codecParam)) {\n    return <h2>Invalid codec, if defined it has to be [{videoCodecs.join(', ')}].</h2>;\n  }\n\n  return (\n    <main data-lk-theme=\"default\" style={{ height: '100%' }}>\n      <VideoConferenceClientImpl liveKitUrl={liveKitUrl} token={token} codec={codec} />\n    </main>\n  );\n}\n\nexport default function CustomRoomConnection() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <CustomRoomContent />\n    </Suspense>\n  );\n}"],"names":["Promise","resolve","then","__webpack_require__","bind","VideoConferenceClientImpl","props","worker","Worker","tu","URL","p","u","b","keyProvider","ExternalE2EEKeyProvider","e2eePassphrase","decodePassphrase","window","location","hash","substring","e2eeEnabled","roomOptions","useMemo","publishDefaults","videoSimulcastLayers","VideoPresets","h540","h216","red","videoCodec","codec","adaptiveStream","pixelDensity","dynacast","e2ee","undefined","room","Room","setKey","setE2EEEnabled","connectOptions","autoSubscribe","jsx_runtime","jsxs","LiveKitRoom","token","serverUrl","liveKitUrl","audio","video","jsx","VideoConference","chatMessageFormatter","formatChatMessageLinks","SettingsComponent","process","env","NEXT_PUBLIC_SHOW_SETTINGS_MENU","SettingsMenu","DebugMode","logLevel","LogLevel","debug","dynamic","CustomRoomContent","searchParams","useSearchParams","get","codecParam","h2","isVideoCodec","main","data-lk-theme","style","height","videoCodecs","join","CustomRoomConnection","Suspense","fallback","div"],"sourceRoot":""}