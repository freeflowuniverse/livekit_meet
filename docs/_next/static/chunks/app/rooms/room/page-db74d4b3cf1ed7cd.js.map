{"version":3,"file":"static/chunks/app/rooms/room/page-db74d4b3cf1ed7cd.js","mappings":"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","sources":["webpack://_N_E/?5124","webpack://_N_E/./lib/RecordingIndicator.tsx","webpack://_N_E/./app/rooms/room/PageClientImpl.tsx","webpack://_N_E/./app/rooms/room/page.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/timurgordon/code/github/livekit-examples/meet/app/rooms/room/page.tsx\");\n","import { useIsRecording } from '@livekit/components-react';\nimport * as React from 'react';\n\nexport function RecordingIndicator() {\n  const isRecording = useIsRecording();\n  const [wasRecording, setWasRecording] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isRecording !== wasRecording) {\n      setWasRecording(isRecording);\n      if (isRecording) {\n        window.alert('This meeting is being recorded');\n      }\n    }\n  }, [isRecording]);\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n        boxShadow: isRecording ? 'red 0px 0px 0px 3px inset' : 'none',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  );\n}\n","'use client';\n\nimport { decodePassphrase } from '@/lib/client-utils';\nimport { DebugMode } from '@/lib/Debug';\nimport { RecordingIndicator } from '@/lib/RecordingIndicator';\nimport { SettingsMenu } from '@/lib/SettingsMenu';\nimport { ConnectionDetails } from '@/lib/types';\nimport {\n  formatChatMessageLinks,\n  LiveKitRoom,\n  LocalUserChoices,\n  PreJoin,\n  VideoConference,\n} from '@livekit/components-react';\nimport {\n  ExternalE2EEKeyProvider,\n  RoomOptions,\n  VideoCodec,\n  VideoPresets,\n  Room,\n  DeviceUnsupportedError,\n  RoomConnectOptions,\n} from 'livekit-client';\nimport { useRouter } from 'next/navigation';\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\n\nconst CONN_DETAILS_ENDPOINT = process.env.NEXT_PUBLIC_CONN_DETAILS_ENDPOINT ?? '/api/connection-details';\nconst SHOW_SETTINGS_MENU = process.env.NEXT_PUBLIC_SHOW_SETTINGS_MENU == 'true';\n\nexport function PageClientImpl(props: {\n  roomName: string;\n  region?: string;\n  hq: boolean;\n  codec: VideoCodec;\n}) {\n  const [preJoinChoices, setPreJoinChoices] = useState<LocalUserChoices | undefined>(undefined);\n  const [connectionDetails, setConnectionDetails] = useState<ConnectionDetails | undefined>(undefined);\n\n  const preJoinDefaults = useMemo(() => {\n    return {\n      username: '',\n      videoEnabled: true,\n      audioEnabled: true,\n    };\n  }, []);\n\n  const handlePreJoinSubmit = useCallback(async (values: LocalUserChoices) => {\n    setPreJoinChoices(values);\n\n    try {\n      const url = new URL(CONN_DETAILS_ENDPOINT, window.location.origin);\n      url.searchParams.append('roomName', props.roomName);\n      url.searchParams.append('participantName', values.username);\n      if (props.region) {\n        url.searchParams.append('region', props.region);\n      }\n\n      const connectionDetailsResp = await fetch(url.toString());\n      const connectionDetailsData = await connectionDetailsResp.json();\n      setConnectionDetails(connectionDetailsData);\n    } catch (error) {\n      console.error('Error fetching connection details:', error);\n    }\n  }, [props.roomName, props.region]);\n\n  const handlePreJoinError = useCallback((e: any) => console.error(e), []);\n\n  return (\n    <main data-lk-theme=\"default\" style={{ height: '100%' }}>\n      {connectionDetails === undefined || preJoinChoices === undefined ? (\n        <div style={{ display: 'grid', placeItems: 'center', height: '100%' }}>\n          <PreJoin\n            defaults={preJoinDefaults}\n            onSubmit={handlePreJoinSubmit}\n            onError={handlePreJoinError}\n          />\n        </div>\n      ) : (\n        <VideoConferenceComponent\n          connectionDetails={connectionDetails}\n          userChoices={preJoinChoices}\n          options={{ codec: props.codec, hq: props.hq }}\n        />\n      )}\n    </main>\n  );\n}\n\nfunction VideoConferenceComponent(props: {\n  userChoices: LocalUserChoices;\n  connectionDetails: ConnectionDetails;\n  options: {\n    hq: boolean;\n    codec: VideoCodec;\n  };\n}) {\n  const e2eePassphrase = typeof window !== 'undefined' && decodePassphrase(location.hash.substring(1));\n  const worker = typeof window !== 'undefined' && e2eePassphrase && new Worker(new URL('livekit-client/e2ee-worker', import.meta.url));\n  const e2eeEnabled = !!(e2eePassphrase && worker);\n  const keyProvider = new ExternalE2EEKeyProvider();\n  const [e2eeSetupComplete, setE2eeSetupComplete] = useState(false);\n\n  const roomOptions = useMemo((): RoomOptions => {\n    let videoCodec: VideoCodec | undefined = props.options.codec ? props.options.codec : 'vp9';\n    if (e2eeEnabled && (videoCodec === 'av1' || videoCodec === 'vp9')) {\n      videoCodec = undefined;\n    }\n    return {\n      videoCaptureDefaults: {\n        deviceId: props.userChoices.videoDeviceId ?? undefined,\n        resolution: props.options.hq ? VideoPresets.h2160 : VideoPresets.h720,\n      },\n      publishDefaults: {\n        dtx: false,\n        videoSimulcastLayers: props.options.hq ? [VideoPresets.h1080, VideoPresets.h720] : [VideoPresets.h540, VideoPresets.h216],\n        red: !e2eeEnabled,\n        videoCodec,\n      },\n      audioCaptureDefaults: {\n        deviceId: props.userChoices.audioDeviceId ?? undefined,\n      },\n      adaptiveStream: { pixelDensity: 'screen' },\n      dynacast: true,\n      e2ee: e2eeEnabled ? { keyProvider, worker } : undefined,\n    };\n  }, [props.userChoices, props.options.hq, props.options.codec]);\n\n  const room = useMemo(() => new Room(roomOptions), [roomOptions]);\n\n  useEffect(() => {\n    if (e2eeEnabled) {\n      keyProvider.setKey(decodePassphrase(e2eePassphrase)).then(() => {\n        room.setE2EEEnabled(true).catch((e) => {\n          if (e instanceof DeviceUnsupportedError) {\n            alert(`Your browser does not support encrypted meetings. Please update it and try again.`);\n            console.error(e);\n          } else {\n            throw e;\n          }\n        });\n      }).then(() => setE2eeSetupComplete(true));\n    } else {\n      setE2eeSetupComplete(true);\n    }\n  }, [e2eeEnabled, room, e2eePassphrase, keyProvider]);\n\n  const connectOptions = useMemo((): RoomConnectOptions => ({ autoSubscribe: true }), []);\n  const router = useRouter();\n  const handleOnLeave = useCallback(() => router.push('/'), [router]);\n\n  return (\n    <>\n      <LiveKitRoom\n        connect={e2eeSetupComplete}\n        room={room}\n        token={props.connectionDetails.participantToken}\n        serverUrl={props.connectionDetails.serverUrl}\n        connectOptions={connectOptions}\n        video={props.userChoices.videoEnabled}\n        audio={props.userChoices.audioEnabled}\n        onDisconnected={handleOnLeave}\n        onError={(error) => console.error(error)}\n      >\n        <VideoConference\n          chatMessageFormatter={formatChatMessageLinks}\n          SettingsComponent={SHOW_SETTINGS_MENU ? SettingsMenu : undefined}\n        />\n        <DebugMode />\n        <RecordingIndicator />\n      </LiveKitRoom>\n    </>\n  );\n}","\"use client\";\nexport const dynamic = 'force-dynamic';\n\nimport * as React from 'react';\nimport { Suspense } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { PageClientImpl } from './PageClientImpl';\nimport { isVideoCodec } from '@/lib/types';\n\nfunction RoomContent() {\n  const searchParams = useSearchParams();\n  const roomName = searchParams.get('roomName') || 'defaultRoom';\n  const region = searchParams.get('region') || undefined;\n  const codecParam = searchParams.get('codec');\n  const codec = codecParam && isVideoCodec(codecParam) ? codecParam : 'vp9';\n  const hq = searchParams.get('hq') === 'true';\n\n  return (\n    <PageClientImpl roomName={roomName} region={region} hq={hq} codec={codec} />\n  );\n}\n\nexport default function RoomPage() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <RoomContent />\n    </Suspense>\n  );\n}"],"names":["Promise","resolve","then","__webpack_require__","bind","process","RecordingIndicator","isRecording","useIsRecording","wasRecording","setWasRecording","React","window","alert","jsx_runtime","jsx","div","style","position","top","left","width","height","boxShadow","pointerEvents","CONN_DETAILS_ENDPOINT","env","NEXT_PUBLIC_CONN_DETAILS_ENDPOINT","SHOW_SETTINGS_MENU","NEXT_PUBLIC_SHOW_SETTINGS_MENU","PageClientImpl","props","preJoinChoices","setPreJoinChoices","useState","undefined","connectionDetails","setConnectionDetails","preJoinDefaults","useMemo","username","videoEnabled","audioEnabled","handlePreJoinSubmit","useCallback","values","url","URL","location","origin","searchParams","append","roomName","region","connectionDetailsResp","fetch","toString","connectionDetailsData","json","error","console","handlePreJoinError","e","main","data-lk-theme","display","placeItems","PreJoin","defaults","onSubmit","onError","VideoConferenceComponent","userChoices","options","codec","hq","e2eePassphrase","decodePassphrase","hash","substring","worker","Worker","tu","p","u","b","e2eeEnabled","keyProvider","ExternalE2EEKeyProvider","e2eeSetupComplete","setE2eeSetupComplete","roomOptions","videoCodec","videoCaptureDefaults","deviceId","videoDeviceId","resolution","VideoPresets","h2160","h720","publishDefaults","dtx","videoSimulcastLayers","h1080","h540","h216","red","audioCaptureDefaults","audioDeviceId","adaptiveStream","pixelDensity","dynacast","e2ee","room","Room","useEffect","setKey","setE2EEEnabled","catch","DeviceUnsupportedError","connectOptions","autoSubscribe","router","useRouter","handleOnLeave","push","Fragment","jsxs","LiveKitRoom","connect","token","participantToken","serverUrl","video","audio","onDisconnected","VideoConference","chatMessageFormatter","formatChatMessageLinks","SettingsComponent","SettingsMenu","DebugMode","dynamic","RoomContent","useSearchParams","get","codecParam","isVideoCodec","RoomPage","Suspense","fallback"],"sourceRoot":""}